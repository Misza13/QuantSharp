name: Publish NuGet & documentation
on:
  push:
    branches:
      - master # Default release branch
jobs:
  build-pack-publish:
    name: Build, pack & publish NuGet package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Publish to nuget.org
        uses: alirezanet/publish-nuget@v3.0.0
        with:
          # Filepath of the project to be packaged, relative to root of repository
          PROJECT_FILE_PATH: src/QuantSharp/QuantSharp.csproj
          
          # NuGet package id, used for version detection & defaults to project name
          PACKAGE_NAME: QuantSharp
          
          # Filepath with version info, relative to root of repository & defaults to PROJECT_FILE_PATH
          # VERSION_FILE_PATH: Directory.Build.props

          # Regex pattern to extract version info in a capturing group
          # VERSION_REGEX: ^\s*<Version>(.*)<\/Version>\s*$
          
          # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
          # VERSION_STATIC: 1.0.0

          # Flag to toggle git tagging, enabled by default
          # TAG_COMMIT: true

          # Format of the git tag, [*] gets replaced with actual version
          # TAG_FORMAT: v*

          # API key to authenticate with NuGet server
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}

          # NuGet server uri hosting the packages, defaults to https://api.nuget.org
          # NUGET_SOURCE: https://api.nuget.org

          # Flag to toggle pushing symbols along with nuget package to the server, disabled by default
          INCLUDE_SYMBOLS: true

  documentaion:
    name: Build & publish documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      
      - name: Install DocFX
        run: |
          wget https://github.com/dotnet/docfx/releases/download/v2.59.0/docfx.zip
          unzip docfx.zip -d docfx
      
      - name: Install dependencies
        run: dotnet restore src/QuantSharp.sln
        
      - name: Build Documentation
        run: docfx/docfx docs/docfx.json
        continue-on-error: false
            
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          external_repository: quantsharp-docs/quantsharp-docs.github.io
          publish_branch: master
          publish_dir: docs/_site